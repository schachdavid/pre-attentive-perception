{"version":3,"sources":["components/CodeBox/CodeBox.module.css","components/CopyMessage/CopyMessage.module.css","svgGenerator/PreAttentiveSvgGenerator.tsx","svgGenerator/shapes/Circle.tsx","svgGenerator/shapes/Hexagon.tsx","svgGenerator/shapes/Rect.tsx","svgGenerator/shapes/Triangle.tsx","svgGenerator/util.ts","svgData.ts","components/CodeBox/CodeBox.tsx","components/CopyMessage/CopyMessage.tsx","components/ShareButtons/ShareButtons.tsx","components/CompletedPage/CompletedPage.tsx","components/SvgShowBox/SvgShowBox.tsx","components/TitlePage/TitlePage.tsx","components/SurveyPanel/SurveyPanel.tsx","surveyData.ts","App.tsx","serviceWorker.ts","index.tsx","components/SvgShowBox/SvgShowBox.module.css","components/CompletedPage/CompletedPage.module.css","components/ShareButtons/ShareButtons.module.css","components/TitlePage/TitlePage.module.css","components/SurveyPanel/SurveyPanel.module.css"],"names":["module","exports","Feature","ShapeTypes","Circle","x","y","size","color","cx","this","cy","r","fill","Hexagon","points","Rect","height","width","Triangle","getRandomInt","min","max","Math","ceil","floor","random","answerType","PreAttentiveSvgGenerator","shapeSize","shapes","numberOfShapes","shapeType","i","coordinates","getRandomValidCoordinates","push","features","includes","Color","Size","Shape","additionalDistractorTypes","secondDistractorColor","clearShapes","length","createFeatureShape","generateShapes","map","shape","getJSX","some","x1","y1","x2","y2","sqrt","pow","coordinatesAreValid","isDistancedToShapes","svgData","time","numberOfDistractors","CodeBox","code","onCopyClick","className","styles","container","copyIcon","onClick","navigator","clipboard","writeText","content","language","style","darcula","CopyMessage","classNames","ShareButtons","socialMediaFooter","href","socialMediaLink","aria-label","icon","CompletedPage","data","useState","showCopied","setShowCopied","answers","answersWithExpected","Object","keys","name","index","answerStatus","JSON","stringify","completedPage","copyMessage","blendInCopyMessage","headLine","answersContainer","codeBox","shareContainer","sharePlease","SvgShowBox","visibleTime","onTimeOver","children","React","useEffect","setTimeout","TitlePage","onStart","assignment","dataDisclaimer","nextButton","type","value","SurveyPanel","ReactSurveyModel","showProgressBar","locale","showNavigationButtons","pages","svg","question","test","distractorNumber","distractorTypes","forEach","featureData","id","questions","title","choices","isRequired","correctAnswer","getSurveyData","survey","displaySvg","setDisplaySvg","currentChartNo","setCurrentChartNo","isCompleted","setIsCompleted","hasStarted","setHasStarted","svgGenerator","setSvg","setVisibleTime","numberOfSvgs","generateSvg","onValidateQuestion","add","validateQuestion","StylesManager","applyTheme","converter","showdown","Converter","onTextMarkdown","options","str","makeHtml","text","substring","html","sender","pageNo","currentPageNo","error","handleNext","isLastPage","nextPage","isCurrentPageHasErrors","page","svgShowBoxContainer","surveyContainer","model","App","resetHeight","document","body","window","innerHeight","addEventListener","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.822154bf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CodeBox_container__K4lrG\",\"content\":\"CodeBox_content__uraSf\",\"copyIcon\":\"CodeBox_copyIcon___W9Sk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CopyMessage_container__3M9lb\"};","import React from 'react';\nimport { Circle } from './shapes/Circle';\nimport { Hexagon } from './shapes/Hexagon';\nimport { Rect } from './shapes/Rect';\nimport { Shape } from './shapes/Shape';\nimport { Triangle } from './shapes/Triangle';\nimport { getDistance, getRandomInt } from './util';\n\nexport enum Feature {\n  Color,\n  Shape,\n  Size,\n}\n\nexport enum ShapeTypes {\n  Rect,\n  Circle,\n  Triangle,\n  Hexagon,\n}\n\nexport class PreAttentiveSvgGenerator {\n  shapes: Shape[] = [];\n  height: number;\n  width: number;\n  shapeSize: number;\n\n  constructor(\n    height: number = 300,\n    width: number = 300,\n    shapeSize: number = 20\n  ) {\n    this.height = height;\n    this.width = width;\n    this.shapeSize = shapeSize;\n  }\n\n  private clearShapes() {\n    this.shapes = [];\n  }\n\n  private generateShapes(\n    numberOfShapes: number = 9,\n    shapeType: ShapeTypes = ShapeTypes.Circle,\n    color: string = 'rgb(60, 59, 64)'\n  ) {\n    for (let i = 0; i < numberOfShapes; i++) {\n      const coordinates = this.getRandomValidCoordinates();\n      switch (shapeType) {\n        case ShapeTypes.Circle: {\n          this.shapes.push(\n            new Circle(coordinates.x, coordinates.y, this.shapeSize, color)\n          );\n          break;\n        }\n        case ShapeTypes.Rect: {\n          this.shapes.push(\n            new Rect(coordinates.x, coordinates.y, this.shapeSize, color)\n          );\n          break;\n        }\n        case ShapeTypes.Triangle: {\n          this.shapes.push(\n            new Triangle(coordinates.x, coordinates.y, this.shapeSize, color)\n          );\n          break;\n        }\n        case ShapeTypes.Hexagon: {\n          this.shapes.push(\n            new Hexagon(coordinates.x, coordinates.y, this.shapeSize, color)\n          );\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n    }\n  }\n\n  private createFeatureShape(features: Feature[]) {\n    const coordinates = this.getRandomValidCoordinates();\n    let color = 'rgb(60, 59, 64)';\n    if (features.includes(Feature.Color)) color = '#00ae8e';\n    let size = this.shapeSize;\n    if (features.includes(Feature.Size)) size = size * 1.4;\n    if (features.includes(Feature.Shape)) {\n      this.shapes.push(new Rect(coordinates.x, coordinates.y, size, color));\n    } else {\n      this.shapes.push(new Circle(coordinates.x, coordinates.y, size, color));\n    }\n  }\n\n  /**\n   * Generates an svg with the given parameters.\n   *\n   */\n  generateSvg(\n    numberOfShapes: number = 9,\n    features: Feature[],\n    additionalDistractorTypes?: number,\n    secondDistractorColor?: string\n  ) {\n    this.clearShapes();\n    if (features.length > 0) this.createFeatureShape(features);\n    switch (additionalDistractorTypes) {\n      case 1: {\n        this.generateShapes(numberOfShapes / 2, ShapeTypes.Circle);\n        this.generateShapes(\n          numberOfShapes / 2,\n          ShapeTypes.Triangle,\n          secondDistractorColor\n        );\n        break;\n      }\n      case 2: {\n        this.generateShapes(numberOfShapes / 3, ShapeTypes.Circle);\n        this.generateShapes(\n          numberOfShapes / 3,\n          ShapeTypes.Triangle,\n          secondDistractorColor\n        );\n        this.generateShapes(numberOfShapes / 3, ShapeTypes.Hexagon);\n        break;\n      }\n      default: {\n        this.generateShapes(numberOfShapes, ShapeTypes.Circle);\n        break;\n      }\n    }\n    return (\n      <svg width={this.height} height={this.width}>\n        {this.shapes.map((shape) => shape.getJSX())}\n      </svg>\n    );\n  }\n\n  /**\n   * Check if the given point is distanced enough to the other shapes.\n   */\n  isDistancedToShapes(x: number, y: number) {\n    return !this.shapes.some((shape) => {\n      return getDistance(x, y, shape.x, shape.y) < this.shapeSize * 2;\n    });\n  }\n\n  /**\n   * Finds random coordinates which are distanced to all objects.\n   */\n  getRandomValidCoordinates() {\n    let coordinatesAreValid = false;\n    let i = 0;\n    while (!coordinatesAreValid && i < 100) {\n      let x = getRandomInt(this.shapeSize * 2, this.width - this.shapeSize * 2);\n      let y = getRandomInt(\n        this.shapeSize * 2,\n        this.height - this.shapeSize * 2\n      );\n      coordinatesAreValid = this.isDistancedToShapes(x, y);\n      i++;\n      if (coordinatesAreValid) {\n        return { x: x, y: y };\n      }\n    }\n    return { x: -10, y: -10 };\n  }\n}\n","import React from 'react';\r\nimport { Shape } from './Shape';\r\n\r\nexport class Circle implements Shape {\r\n  constructor(\r\n    public x: number,\r\n    public y: number,\r\n    public size: number,\r\n    public color: string\r\n  ) {}\r\n\r\n  getJSX() {\r\n    return (\r\n      <circle cx={this.x} cy={this.y} r={this.size / 2} fill={this.color} />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Shape } from './Shape';\r\n\r\nexport class Hexagon implements Shape {\r\n  constructor(\r\n    public x: number,\r\n    public y: number,\r\n    public size: number,\r\n    public color: string\r\n  ) {}\r\n\r\n  getJSX() {\r\n    //scale heaxgon similiar to other shapes\r\n    const size = this.size * 0.8;\r\n    return (\r\n      <polygon\r\n        points={`${1.5 * size + this.x},${0.75 * size + this.y}\r\n      ${1.125 * size + this.x},  ${1.4 * size + this.y}\r\n      ${0.375 * size + this.x},  ${1.4 * size + this.y}\r\n      ${0 * size + this.x},  ${0.75 * size + this.y}\r\n      ${0.375 * size + this.x},  ${0.1 * size + this.y}\r\n      ${1.125 * size + this.x},  ${0.1 * size + this.y}`}\r\n        fill={this.color}\r\n      ></polygon>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Shape } from './Shape';\r\n\r\nexport class Rect implements Shape {\r\n  constructor(\r\n    public x: number,\r\n    public y: number,\r\n    public size: number,\r\n    public color: string\r\n  ) {}\r\n\r\n  getJSX() {\r\n    return (\r\n      <rect\r\n        x={this.x}\r\n        y={this.y}\r\n        height={this.size}\r\n        width={this.size}\r\n        fill={this.color}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Shape } from './Shape';\r\n\r\nexport class Triangle implements Shape {\r\n  constructor(\r\n    public x: number,\r\n    public y: number,\r\n    public size: number,\r\n    public color: string\r\n  ) {}\r\n\r\n  getJSX() {\r\n    return (\r\n      <polygon\r\n        points={`${0.5 * this.size + this.x},${0 + this.y} \r\n        ${1 * this.size + this.x},${1 * this.size + this.y} \r\n        ${0 + this.x},${1 * this.size + this.y}`}\r\n        fill={this.color}\r\n      />\r\n    );\r\n  }\r\n}\r\n","/**\r\n * Returns a random integer between min (inclusive) and max (inclusive).\r\n */\r\nexport function getRandomInt(min: number, max: number) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\n/**\r\n * Calculates the distance between to points.\r\n */\r\nexport function getDistance(x1: number, y1: number, x2: number, y2: number) {\r\n  const distance = Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\r\n  return distance;\r\n}\r\n","import { Feature } from './svgGenerator/PreAttentiveSvgGenerator';\r\n\r\nexport enum answerType {\r\n  percentage,\r\n  multiples,\r\n}\r\n\r\ninterface PreAttentiveSvgData {\r\n  time: number;\r\n  features: Feature[];\r\n  additionalDistractorTypes?: number;\r\n  secondDistractorColor?: string;\r\n  numberOfDistractors?: number;\r\n}\r\n\r\nexport const svgData: PreAttentiveSvgData[] = [\r\n  //test questions\r\n  {\r\n    time: 3000,\r\n    features: [Feature.Color],\r\n  },\r\n  {\r\n    time: 3000,\r\n    features: [Feature.Size],\r\n  },\r\n  {\r\n    time: 3000,\r\n    features: [Feature.Shape],\r\n  },\r\n  {\r\n    time: 3000,\r\n    features: [],\r\n  },\r\n  {\r\n    time: 3000,\r\n    features: [Feature.Shape],\r\n    additionalDistractorTypes: 1,\r\n  },\r\n  {\r\n    time: 3000,\r\n    features: [Feature.Shape],\r\n    additionalDistractorTypes: 2,\r\n  },\r\n  // real questions\r\n  // feature only:\r\n  {\r\n    time: 500,\r\n    features: [Feature.Shape],\r\n  },\r\n  {\r\n    time: 250,\r\n    features: [Feature.Color],\r\n  },\r\n  {\r\n    time: 250,\r\n    features: [Feature.Size],\r\n  },\r\n  {\r\n    time: 150,\r\n    features: [Feature.Color],\r\n  },\r\n  {\r\n    time: 150,\r\n    features: [],\r\n  },\r\n  {\r\n    time: 250,\r\n    features: [Feature.Shape],\r\n  },\r\n  {\r\n    time: 500,\r\n    features: [Feature.Size],\r\n  },\r\n  {\r\n    time: 500,\r\n    features: [],\r\n  },\r\n  {\r\n    time: 150,\r\n    features: [Feature.Shape],\r\n  },\r\n  {\r\n    time: 250,\r\n    features: [],\r\n  },\r\n  {\r\n    time: 500,\r\n    features: [Feature.Color],\r\n  },\r\n  {\r\n    time: 150,\r\n    features: [Feature.Size],\r\n  },\r\n  //multiple distractors:\r\n\r\n  {\r\n    time: 750,\r\n    features: [Feature.Shape],\r\n  },\r\n  {\r\n    time: 750,\r\n    features: [Feature.Shape],\r\n    additionalDistractorTypes: 2,\r\n  },\r\n  {\r\n    time: 1250,\r\n    features: [Feature.Shape],\r\n  },\r\n  {\r\n    time: 250,\r\n    features: [Feature.Shape],\r\n    numberOfDistractors: 19,\r\n  },\r\n  {\r\n    time: 750,\r\n    features: [Feature.Shape],\r\n    additionalDistractorTypes: 1,\r\n  },\r\n  {\r\n    time: 250,\r\n    features: [Feature.Shape],\r\n  },\r\n  {\r\n    time: 1250,\r\n    features: [Feature.Shape],\r\n    numberOfDistractors: 19,\r\n  },\r\n  {\r\n    time: 250,\r\n    features: [Feature.Shape],\r\n    additionalDistractorTypes: 2,\r\n  },\r\n  {\r\n    time: 1250,\r\n    features: [Feature.Shape],\r\n    additionalDistractorTypes: 1,\r\n  },\r\n  {\r\n    time: 750,\r\n    features: [],\r\n    additionalDistractorTypes: 1,\r\n  },\r\n  {\r\n    time: 1250,\r\n    features: [Feature.Shape],\r\n    additionalDistractorTypes: 2,\r\n  },\r\n  {\r\n    time: 250,\r\n    features: [Feature.Shape],\r\n    additionalDistractorTypes: 1,\r\n  },\r\n  {\r\n    time: 250,\r\n    features: [],\r\n    additionalDistractorTypes: 1,\r\n  },\r\n\r\n  {\r\n    time: 1250,\r\n    features: [],\r\n    additionalDistractorTypes: 1,\r\n  },\r\n\r\n  {\r\n    time: 750,\r\n    features: [Feature.Shape],\r\n    numberOfDistractors: 19,\r\n  },\r\n\r\n  //mixed feature:\r\n  {\r\n    time: 1750,\r\n    features: [Feature.Color],\r\n    additionalDistractorTypes: 1,\r\n    secondDistractorColor: '#00ae8e',\r\n  },\r\n  {\r\n    time: 1250,\r\n    features: [],\r\n    additionalDistractorTypes: 1,\r\n    secondDistractorColor: '#00ae8e',\r\n  },\r\n  {\r\n    time: 1250,\r\n    features: [Feature.Color],\r\n    additionalDistractorTypes: 1,\r\n    secondDistractorColor: '#00ae8e',\r\n  },\r\n  {\r\n    time: 1250,\r\n    features: [],\r\n    additionalDistractorTypes: 1,\r\n    secondDistractorColor: '#00ae8e',\r\n  },\r\n  {\r\n    time: 1250,\r\n    features: [Feature.Color],\r\n    additionalDistractorTypes: 1,\r\n    secondDistractorColor: '#00ae8e',\r\n  },\r\n  {\r\n    time: 1750,\r\n    features: [],\r\n    additionalDistractorTypes: 1,\r\n    secondDistractorColor: '#00ae8e',\r\n  },\r\n];\r\n","import React from 'react';\nimport { MdContentCopy } from 'react-icons/md';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { darcula } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport styles from './CodeBox.module.css';\n\ninterface IProps {\n  code: string;\n  onCopyClick: () => any;\n}\n\nexport const CodeBox: React.FC<IProps> = ({ code, onCopyClick }) => {\n  const copyCode = () => {\n    navigator.clipboard.writeText(code);\n    onCopyClick();\n  };\n\n  return (\n    <div className={styles.container}>\n      <MdContentCopy className={styles.copyIcon} onClick={copyCode} />\n\n      <div className={styles.content}>\n        <SyntaxHighlighter language=\"json\" style={darcula}>\n          {code}\n        </SyntaxHighlighter>\n      </div>\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport styles from './CopyMessage.module.css';\n\ninterface IProps {\n  className?: string;\n}\n\nexport const CopyMessage: React.FC<IProps> = ({ className }) => {\n  return (\n    <div className={classNames(styles.container, className)}>\n      Daten kopiert!\n    </div>\n  );\n};\n","import React from 'react';\nimport { FaTelegramPlane, FaWhatsapp } from 'react-icons/fa';\nimport { FiMail } from 'react-icons/fi';\nimport styles from './ShareButtons.module.css';\n\ninterface IProps {\n  code: string;\n}\n\nexport const ShareButtons: React.FC<IProps> = ({ code }) => {\n  return (\n    <div className={styles.container}>\n      <div className={styles.socialMediaFooter}>\n        <a\n          href={`mailto:schachdavid@web.de?subject=Visualization Antworten&body=Hi David,\n          hier die Antworten der Umfrage:\n          ${code}`}\n          className={styles.socialMediaLink}\n          aria-label=\"Send via Email\"\n        >\n          <FiMail className={styles.icon} />\n        </a>\n        <a\n          href={`https://telegram.me/share/url?url=${code}`}\n          className={styles.socialMediaLink}\n          aria-label=\"Send via Telegram\"\n        >\n          <FaTelegramPlane className={styles.icon} />\n        </a>\n        <a\n          href={`https://wa.me/?text=${code}`}\n          className={styles.socialMediaLink}\n          aria-label=\"Send via Whatsapp\"\n        >\n          <FaWhatsapp className={styles.icon} />\n        </a>\n      </div>\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { svgData } from '../../svgData';\nimport { CodeBox } from '../CodeBox/CodeBox';\nimport { CopyMessage } from '../CopyMessage/CopyMessage';\nimport { ShareButtons } from '../ShareButtons/ShareButtons';\nimport styles from './CompletedPage.module.css';\n\ninterface IProps {\n  data: any;\n}\n\nexport const CompletedPage: React.FC<IProps> = ({ data }) => {\n  const [showCopied, setShowCopied] = useState(false);\n\n  const answers = { ...data };\n\n  const answersWithExpected = Object.keys(answers).map((name, index) => {\n    let answerStatus = '❌';\n\n    if (\n      (svgData[index].features.length > 0 && answers[name] === 'Ja') ||\n      (svgData[index].features.length === 0 && answers[name] === 'Nein')\n    )\n      answerStatus = '✔️';\n\n    return {\n      name: name,\n      answerStatus: answerStatus,\n    };\n  });\n\n  const code = JSON.stringify(answersWithExpected, null, 4);\n\n  return (\n    <div className={styles.completedPage}>\n      <CopyMessage\n        className={classNames(\n          styles.copyMessage,\n          showCopied ? styles.blendInCopyMessage : ''\n        )}\n      ></CopyMessage>\n      <h1 className={styles.headLine}>Vielen Dank für deine Hilfe!</h1>\n\n      <div className={styles.answersContainer}>\n        <div className={styles.answers}>Deine Antworten</div>\n        <div className={styles.codeBox}>\n          <CodeBox\n            code={code}\n            onCopyClick={() => {\n              setShowCopied(true);\n            }}\n          ></CodeBox>\n        </div>\n      </div>\n\n      <div className={styles.shareContainer}>\n        <div className={styles.sharePlease}>\n          Bitte schicke mir deine Antworten damit ich sie auswerten kann:\n        </div>\n        <ShareButtons code={code} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport styles from './SvgShowBox.module.css';\n\ninterface IProps {\n  visibleTime: number;\n  onTimeOver: () => void;\n}\n\nexport const SvgShowBox: React.FC<IProps> = ({\n  visibleTime,\n  onTimeOver,\n  children,\n}) => {\n  React.useEffect(() => {\n    setTimeout(() => {\n      onTimeOver();\n    }, visibleTime);\n    return () => {};\n  }, []);\n  return <div className={styles.container}>{children}</div>;\n};\n","import React from 'react';\nimport styles from './TitlePage.module.css';\n\ninterface IProps {\n  onStart: () => any;\n}\n\nexport const TitlePage: React.FC<IProps> = ({ onStart }) => {\n  return (\n    <div className={styles.container}>\n      <div className={styles.content}>\n        <h1 className={styles.headLine}>Wahrnehmungs Tests</h1>\n        <div className={styles.time}>Zeitaufwand: 3min.</div>\n        <div className={styles.assignment}>\n          <p>Dir werden gleich für einen kurzen Moment Bilder gezeigt.</p>\n          <p>Du musst beurteilen, ob ein Objekt aus der Reihe tanzt.</p>\n        </div>\n        <div className={styles.dataDisclaimer}>\n          Die Daten werden alle lokal verarbeitet, am Ende kannst du mir deine\n          Antworten per Mail oder einem Instant-Messenger deiner Wahl\n          verschicken.\n        </div>\n      </div>\n\n      <input\n        className={styles.nextButton}\n        type=\"submit\"\n        value=\"Start\"\n        onClick={onStart}\n      />\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport showdown from 'showdown';\nimport {\n  ReactSurveyModel,\n  StylesManager,\n  Survey,\n  SurveyModel,\n} from 'survey-react';\nimport 'survey-react/survey.css';\nimport { getSurveyData } from '../../surveyData';\nimport { svgData } from '../../svgData';\nimport { PreAttentiveSvgGenerator } from '../../svgGenerator/PreAttentiveSvgGenerator';\nimport { CompletedPage } from '../CompletedPage/CompletedPage';\nimport { SvgShowBox } from '../SvgShowBox/SvgShowBox';\nimport { TitlePage } from '../TitlePage/TitlePage';\nimport styles from './SurveyPanel.module.css';\n\nexport const SurveyPanel: React.FC = () => {\n  const [survey, setSurvey] = useState(new ReactSurveyModel(getSurveyData()));\n  const [displaySvg, setDisplaySvg] = useState(true);\n  const [currentChartNo, setCurrentChartNo] = useState(0);\n  const [isCompleted, setIsCompleted] = useState(false);\n  const [hasStarted, setHasStarted] = useState(false);\n  const [svgGenerator, setSvgGenerator] = useState(\n    new PreAttentiveSvgGenerator()\n  );\n  const [svg, setSvg] = useState<JSX.Element>();\n  const [visibleTime, setVisibleTime] = useState(500);\n\n  const numberOfSvgs = svgData.length;\n\n  useEffect(() => {\n    //set initial svg\n    const features = svgData[0].features;\n    const time = svgData[0].time;\n    const additionalDistractorTypes = svgData[0].additionalDistractorTypes;\n    const secondDistractorColor = svgData[0].secondDistractorColor;\n    const numberOfDistractors = svgData[0].numberOfDistractors;\n    setSvg(\n      svgGenerator.generateSvg(\n        numberOfDistractors,\n        features,\n        additionalDistractorTypes,\n        secondDistractorColor\n      )\n    );\n    setVisibleTime(time);\n    setDisplaySvg(true);\n\n    //survey settings\n    survey.onValidateQuestion.add(validateQuestion);\n\n    StylesManager.applyTheme('winter');\n    let converter = new showdown.Converter();\n    survey.onTextMarkdown.add(function (survey, options) {\n      //convert the mardown text to html\n      var str = converter.makeHtml(options.text);\n      //remove root paragraphs <p></p>\n      str = str.substring(3);\n      str = str.substring(0, str.length - 4);\n      //set html\n      options.html = str;\n    });\n    return () => {};\n  }, [survey.onTextMarkdown, survey.onValidateQuestion, svgGenerator]);\n\n  const validateQuestion = (sender: SurveyModel, options: any) => {\n    //check test questions\n    const pageNo = sender.currentPageNo;\n    if (\n      pageNo <= 3 &&\n      ((options.value === 'Nein' && svgData[pageNo].features.length > 0) ||\n        (options.value === 'Ja' && svgData[pageNo].features.length === 0))\n    ) {\n      options.error = 'Falsche Antwort. Bitte korrigiere deine Antwort.';\n    }\n  };\n\n  const handleNext = () => {\n    const pageNo = survey.currentPageNo;\n    if (pageNo >= numberOfSvgs - 1) {\n      if (survey.isLastPage) setIsCompleted(true);\n      else survey.nextPage();\n    } else if (\n      !displaySvg &&\n      currentChartNo !== pageNo &&\n      !survey.isCurrentPageHasErrors\n    ) {\n      const features = svgData[pageNo + 1].features;\n      const time = svgData[pageNo + 1].time;\n      const additionalDistractorTypes =\n        svgData[pageNo + 1].additionalDistractorTypes;\n      const secondDistractorColor = svgData[pageNo + 1].secondDistractorColor;\n      setSvg(\n        svgGenerator.generateSvg(\n          9,\n          features,\n          additionalDistractorTypes,\n          secondDistractorColor\n        )\n      );\n      setVisibleTime(time);\n      setDisplaySvg(true);\n    } else if (displaySvg) {\n      setDisplaySvg(false);\n      setCurrentChartNo(currentChartNo + 1);\n      if (currentChartNo !== 0) survey.nextPage();\n    }\n  };\n\n  const page = !hasStarted ? (\n    <TitlePage onStart={() => setHasStarted(true)} />\n  ) : isCompleted ? (\n    <CompletedPage data={survey.data}></CompletedPage>\n  ) : displaySvg ? (\n    <div className={styles.svgShowBoxContainer}>\n      <SvgShowBox visibleTime={visibleTime} onTimeOver={() => handleNext()}>\n        {svg}\n      </SvgShowBox>\n    </div>\n  ) : (\n    <div className={styles.surveyContainer}>\n      <Survey model={survey} />\n      <input\n        className={styles.nextButton}\n        type=\"submit\"\n        value=\"Weiter\"\n        onClick={handleNext}\n      />\n    </div>\n  );\n\n  return <div className={styles.container}>{page}</div>;\n};\n","import { svgData } from './svgData';\r\nimport { Feature } from './svgGenerator/PreAttentiveSvgGenerator';\r\n\r\nexport const getSurveyData = () => {\r\n  let data: any = {\r\n    showProgressBar: 'top',\r\n    locale: 'de',\r\n    showNavigationButtons: false,\r\n  };\r\n\r\n  data.pages = svgData.map((svg, index) => {\r\n    let question = '';\r\n    if (index < 4) {\r\n      question = 'Testfrage: Tanzt ein einzelnes Objekt aus der Reihe?';\r\n    } else if (index === 4) {\r\n      question = 'LETZTE Testfrage: Tanzt ein einzelnes Objekt aus der Reihe?';\r\n    } else {\r\n      question = 'Tanzt ein einzelnes Objekt aus der Reihe?';\r\n    }\r\n\r\n    const test = index <= 4 ? `test_` : ``;\r\n    const distractorNumber = svg.numberOfDistractors\r\n      ? `${svg.numberOfDistractors}_distractors_`\r\n      : ``;\r\n    const distractorTypes = svg.additionalDistractorTypes\r\n      ? `${svg.additionalDistractorTypes}_additionalDistractorTypes_`\r\n      : ``;\r\n    const secondDistractorColor = svg.secondDistractorColor\r\n      ? `_secondDistractorColor_`\r\n      : ``;\r\n    let features = '';\r\n    if (svg.features) {\r\n      svg.features.forEach((featureData) => {\r\n        features += `${Feature[featureData]}_`;\r\n      });\r\n    }\r\n    const id = `_id_${index}`;\r\n    const time = `${svg.time}ms`;\r\n    const name = `${test}${features}${distractorNumber}${distractorTypes}${secondDistractorColor}${time}${id}`;\r\n    return {\r\n      questions: [\r\n        {\r\n          type: 'radiogroup',\r\n          name: name,\r\n          title: question,\r\n          choices: ['Ja', 'Nein'],\r\n          isRequired: true,\r\n          correctAnswer: ['Nein'],\r\n        },\r\n      ],\r\n    };\r\n  });\r\n\r\n  return data;\r\n};\r\n","import React from 'react';\nimport 'survey-react/survey.css';\nimport './App.css';\nimport { SurveyPanel } from './components/SurveyPanel/SurveyPanel';\n\nfunction App() {\n  function resetHeight() {\n    // reset the body height to that of the inner browser\n    document.body.style.height = window.innerHeight + 'px';\n  }\n  // reset the height whenever the window's resized\n  window.addEventListener('resize', resetHeight);\n  // called to initially set the height.\n  resetHeight();\n\n  return (\n    <div className=\"App\">\n      <SurveyPanel></SurveyPanel>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SvgShowBox_container__1gYN3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"completedPage\":\"CompletedPage_completedPage__1BqT-\",\"codeBox\":\"CompletedPage_codeBox__13OHm\",\"xValue\":\"CompletedPage_xValue__20tTk\",\"shareContainer\":\"CompletedPage_shareContainer__1S2gr\",\"sharePlease\":\"CompletedPage_sharePlease__26riB\",\"answers\":\"CompletedPage_answers__25GuZ\",\"answersContainer\":\"CompletedPage_answersContainer__1Or2X\",\"copyMessage\":\"CompletedPage_copyMessage__jIaW-\",\"blendInCopyMessage\":\"CompletedPage_blendInCopyMessage__1PX0X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"socialMediaFooter\":\"ShareButtons_socialMediaFooter__8pADs\",\"icon\":\"ShareButtons_icon__3dGPb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TitlePage_container__1yDjd\",\"headLine\":\"TitlePage_headLine__1eDPq\",\"time\":\"TitlePage_time__BIQ_v\",\"dataDisclaimer\":\"TitlePage_dataDisclaimer__1O53u\",\"content\":\"TitlePage_content__3H2Yd\",\"assignment\":\"TitlePage_assignment__ysOSo\",\"nextButton\":\"TitlePage_nextButton__2vQ0g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SurveyPanel_container__MCpxc\",\"surveyContainer\":\"SurveyPanel_surveyContainer__1PlBI\",\"svgShowBoxContainer\":\"SurveyPanel_svgShowBoxContainer__3mgkS\",\"chart\":\"SurveyPanel_chart__3USj-\",\"chartContainer\":\"SurveyPanel_chartContainer__1brvN\",\"footLine\":\"SurveyPanel_footLine__3mITb\",\"nextButton\":\"SurveyPanel_nextButton__1hTaZ\"};"],"sourceRoot":""}